{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://markdown-to-jsx/webpack/bootstrap","webpack://markdown-to-jsx/webpack/runtime/define property getters","webpack://markdown-to-jsx/webpack/runtime/hasOwnProperty shorthand","webpack://markdown-to-jsx/webpack/runtime/make namespace object","webpack://markdown-to-jsx/external commonjs \"vscode\"","webpack://markdown-to-jsx/./src/lib/utils/regex.ts","webpack://markdown-to-jsx/./src/lib/utils/tag.ts","webpack://markdown-to-jsx/./src/lib/services/html-parser.ts","webpack://markdown-to-jsx/./src/provider/conversionProvider.ts","webpack://markdown-to-jsx/./src/lib/services/export.ts","webpack://markdown-to-jsx/./src/lib/services/jsx-parser.ts","webpack://markdown-to-jsx/external node-commonjs \"path\"","webpack://markdown-to-jsx/./src/provider/fsSystemProvider.ts","webpack://markdown-to-jsx/./src/extension.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"vscode\");","type RegexType = {\n  [key: string]: RegExp;\n};\n\nexport const regex: RegexType = {\n  h1: /^# (.*$)/gim,\n  h2: /^## (.*$)/gim,\n  h3: /^### (.*$)/gim,\n  h4: /^#### (.*$)/gim,\n  h5: /^##### (.*$)/gim,\n  h6: /^###### (.*$)/gim,\n  b: /\\*\\*(.*)\\*\\*/gim,\n  i: /\\*(.*)\\*/gim,\n  br: /\\n$/gim,\n  a: /\\[(.*?)\\]\\((.*?)\\)/gim,\n  bq: /^\\> (.*$)/gim,\n  img: /!\\[(.*?)\\]\\((.*?)\\)/gim,\n};\n","export const tagList = [\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"b\",\n  \"i\",\n  \"br\",\n  \"a\",\n  \"bq\",\n  \"img\",\n];\n\ntype HtmlType = {\n  [key: string]: string;\n};\n\nexport const toHtml: HtmlType = {\n  h1: \"<h1>$1</h1>\",\n  h2: \"<h2>$1</h2>\",\n  h3: \"<h3>$1</h3>\",\n  h4: \"<h4>$1</h4>\",\n  h5: \"<h5>$1</h5>\",\n  h6: \"<h6>$1</h6>\",\n  b: \"<b>$1</b>\",\n  i: \"<i>$1</i>\",\n  br: \"<br/>\",\n  a: \"<a href='$2'>$1</a>\",\n  bq: \"<blockquote>$1</blockquote>\",\n  img: \"<img alt='$1' src='$2' />\",\n};\n","import { regex } from \"../utils/regex\";\nimport { tagList, toHtml } from \"../utils/tag\";\n\nexport function htmlParser(md: string) {\n  for (const tag of tagList) {\n    md = md.replace(regex[tag], toHtml[tag]);\n  }\n\n  return md.trim();\n}\n","import * as vscode from \"vscode\";\nimport { exportHtml, exportJSX } from \"../lib/services/export\";\n\nexport class ConversionProvider {\n  public handleFile(func: string): string | undefined {\n    let editor = vscode.window.activeTextEditor;\n    if (!editor) {\n      return;\n    }\n\n    let path = vscode.window.activeTextEditor?.document.uri.path;\n    let doc = editor.document;\n\n    if (doc.languageId === \"markdown\") {\n      switch (func) {\n        case \"html\": {\n          return this._convertHtml(path, doc);\n        }\n        case \"jsx\": {\n          return this._convertJSX(path, doc);\n        }\n        default: {\n          return undefined;\n        }\n      }\n    } else {\n      vscode.window.showErrorMessage(\"Only Markdown is available\");\n    }\n    return undefined;\n  }\n\n  private _convertHtml(\n    path: string | undefined,\n    doc: vscode.TextDocument\n  ): string | undefined {\n    return exportHtml(path, doc);\n  }\n\n  private _convertJSX(\n    path: string | undefined,\n    doc: vscode.TextDocument\n  ): string | undefined {\n    return exportJSX(path, doc);\n  }\n\n  dispose() {}\n}\n","import * as vscode from \"vscode\";\nimport * as fs from \"fs\";\nimport { htmlParser } from \"./html-parser\";\nimport { importSection, renderSection } from \"./jsx-parser\";\n\nexport function exportHtml(\n  path: string | undefined,\n  data: vscode.TextDocument\n): string | undefined {\n  try {\n    if (path) {\n      vscode.window.showInformationMessage(\n        \"Export Html Completed successfully\"\n      );\n      return htmlParser(data.getText());\n      // fs.writeFileSync(path.split('.')[0] + \".html\", htmlParser(data.getText()), 'utf8');\n    }\n  } catch (err) {\n    vscode.window.showErrorMessage(\"Error Occurred while exporting html file\");\n  }\n  return undefined;\n}\n\nexport function exportJSX(\n  path: string | undefined,\n  data: vscode.TextDocument\n): string | undefined {\n  try {\n    if (path) {\n      let parsedHtml = htmlParser(data.getText());\n      return importSection + renderSection(parsedHtml);\n      // fs.writeFileSync(path.split(\".\")[0] + \".jsx\", parsedJSX, \"utf8\");\n    }\n  } catch (err) {\n    vscode.window.showErrorMessage(\"Error Occurred while exporting JSX file\");\n  }\n  return undefined;\n}\n","export const importSection = `import React from 'react';`;\n\nexport function renderSection(code: string) {\n  return `export default function Output() {\n    return (\n      <div>${code}</div>\n    )\n  }`;\n}","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","/*---------------------------------------------------------------------------------------------\n *  This file referenced Microsoft VSCode Extension Sample FSProvider\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from \"vscode\";\nimport * as path from \"path\";\n\nexport class File implements vscode.FileStat {\n  type: vscode.FileType;\n  ctime: number;\n  mtime: number;\n  size: number;\n\n  name: string;\n  data?: Uint8Array;\n\n  constructor(name: string) {\n    this.type = vscode.FileType.File;\n    this.ctime = Date.now();\n    this.mtime = Date.now();\n    this.size = 0;\n    this.name = name;\n  }\n}\n\nexport class Directory implements vscode.FileStat {\n  type: vscode.FileType;\n  ctime: number;\n  mtime: number;\n  size: number;\n\n  name: string;\n  entries: Map<string, File | Directory>;\n\n  constructor(name: string) {\n    this.type = vscode.FileType.Directory;\n    this.ctime = Date.now();\n    this.mtime = Date.now();\n    this.size = 0;\n    this.name = name;\n    this.entries = new Map();\n  }\n}\n\nexport type Entry = File | Directory;\n\nexport class FSP implements vscode.FileSystemProvider {\n  root = new Directory(\"\");\n\n  // --- manage file metadata\n\n  stat(uri: vscode.Uri): vscode.FileStat {\n    return this._lookup(uri, false);\n  }\n\n  readDirectory(uri: vscode.Uri): [string, vscode.FileType][] {\n    const entry = this._lookupAsDirectory(uri, false);\n    const result: [string, vscode.FileType][] = [];\n    for (const [name, child] of entry.entries) {\n      result.push([name, child.type]);\n    }\n    return result;\n  }\n\n  // --- manage file contents\n\n  readFile(uri: vscode.Uri): Uint8Array {\n    const data = this._lookupAsFile(uri, false).data;\n    if (data) {\n      return data;\n    }\n    throw vscode.FileSystemError.FileNotFound();\n  }\n\n  writeFile(\n    uri: vscode.Uri,\n    content: Uint8Array,\n    options: { create: boolean; overwrite: boolean }\n  ): void {\n    const basename = path.posix.basename(uri.path);\n    const parent = this._lookupParentDirectory(uri);\n    let entry = parent.entries.get(basename);\n    if (entry instanceof Directory) {\n      throw vscode.FileSystemError.FileIsADirectory(uri);\n    }\n    if (!entry && !options.create) {\n      throw vscode.FileSystemError.FileNotFound(uri);\n    }\n    if (entry && options.create && !options.overwrite) {\n      throw vscode.FileSystemError.FileExists(uri);\n    }\n    if (!entry) {\n      entry = new File(basename);\n      parent.entries.set(basename, entry);\n      this._fireSoon({ type: vscode.FileChangeType.Created, uri });\n    }\n    entry.mtime = Date.now();\n    entry.size = content.byteLength;\n    entry.data = content;\n\n    this._fireSoon({ type: vscode.FileChangeType.Changed, uri });\n  }\n\n  // --- manage files/folders\n\n  rename(\n    oldUri: vscode.Uri,\n    newUri: vscode.Uri,\n    options: { overwrite: boolean }\n  ): void {\n    if (!options.overwrite && this._lookup(newUri, true)) {\n      throw vscode.FileSystemError.FileExists(newUri);\n    }\n\n    const entry = this._lookup(oldUri, false);\n    const oldParent = this._lookupParentDirectory(oldUri);\n\n    const newParent = this._lookupParentDirectory(newUri);\n    const newName = path.posix.basename(newUri.path);\n\n    oldParent.entries.delete(entry.name);\n    entry.name = newName;\n    newParent.entries.set(newName, entry);\n\n    this._fireSoon(\n      { type: vscode.FileChangeType.Deleted, uri: oldUri },\n      { type: vscode.FileChangeType.Created, uri: newUri }\n    );\n  }\n\n  delete(uri: vscode.Uri): void {\n    const dirname = uri.with({ path: path.posix.dirname(uri.path) });\n    const basename = path.posix.basename(uri.path);\n    const parent = this._lookupAsDirectory(dirname, false);\n    if (!parent.entries.has(basename)) {\n      throw vscode.FileSystemError.FileNotFound(uri);\n    }\n    parent.entries.delete(basename);\n    parent.mtime = Date.now();\n    parent.size -= 1;\n    this._fireSoon(\n      { type: vscode.FileChangeType.Changed, uri: dirname },\n      { uri, type: vscode.FileChangeType.Deleted }\n    );\n  }\n\n  createDirectory(uri: vscode.Uri): void {\n    const basename = path.posix.basename(uri.path);\n    const dirname = uri.with({ path: path.posix.dirname(uri.path) });\n    const parent = this._lookupAsDirectory(dirname, false);\n\n    const entry = new Directory(basename);\n    parent.entries.set(entry.name, entry);\n    parent.mtime = Date.now();\n    parent.size += 1;\n    this._fireSoon(\n      { type: vscode.FileChangeType.Changed, uri: dirname },\n      { type: vscode.FileChangeType.Created, uri }\n    );\n  }\n\n  // --- lookup\n\n  private _lookup(uri: vscode.Uri, silent: false): Entry;\n  private _lookup(uri: vscode.Uri, silent: boolean): Entry | undefined;\n  private _lookup(uri: vscode.Uri, silent: boolean): Entry | undefined {\n    const parts = uri.path.split(\"/\");\n    let entry: Entry = this.root;\n    for (const part of parts) {\n      if (!part) {\n        continue;\n      }\n      let child: Entry | undefined;\n      if (entry instanceof Directory) {\n        child = entry.entries.get(part);\n      }\n      if (!child) {\n        if (!silent) {\n          throw vscode.FileSystemError.FileNotFound(uri);\n        } else {\n          return undefined;\n        }\n      }\n      entry = child;\n    }\n    return entry;\n  }\n\n  private _lookupAsDirectory(uri: vscode.Uri, silent: boolean): Directory {\n    const entry = this._lookup(uri, silent);\n    if (entry instanceof Directory) {\n      return entry;\n    }\n    throw vscode.FileSystemError.FileNotADirectory(uri);\n  }\n\n  private _lookupAsFile(uri: vscode.Uri, silent: boolean): File {\n    const entry = this._lookup(uri, silent);\n    if (entry instanceof File) {\n      return entry;\n    }\n    throw vscode.FileSystemError.FileIsADirectory(uri);\n  }\n\n  private _lookupParentDirectory(uri: vscode.Uri): Directory {\n    const dirname = uri.with({ path: path.posix.dirname(uri.path) });\n    return this._lookupAsDirectory(dirname, false);\n  }\n\n  // --- manage file events\n\n  private _emitter = new vscode.EventEmitter<vscode.FileChangeEvent[]>();\n  private _bufferedEvents: vscode.FileChangeEvent[] = [];\n  private _fireSoonHandle?: NodeJS.Timer;\n\n  readonly onDidChangeFile: vscode.Event<vscode.FileChangeEvent[]> =\n    this._emitter.event;\n\n  watch(_resource: vscode.Uri): vscode.Disposable {\n    // ignore, fires for all changes...\n    return new vscode.Disposable(() => {});\n  }\n\n  private _fireSoon(...events: vscode.FileChangeEvent[]): void {\n    this._bufferedEvents.push(...events);\n\n    if (this._fireSoonHandle) {\n      clearTimeout(this._fireSoonHandle);\n    }\n\n    this._fireSoonHandle = setTimeout(() => {\n      this._emitter.fire(this._bufferedEvents);\n      this._bufferedEvents.length = 0;\n    }, 5);\n  }\n}\n","import * as vscode from \"vscode\";\nimport { ConversionProvider } from \"./provider/conversionProvider\";\nimport { FSP } from \"./provider/fsSystemProvider\";\n\nexport async function activate(context: vscode.ExtensionContext) {\n  console.log(\"Markdown to JSX is activated\");\n\n  const conversionProvider = new ConversionProvider();\n  const fileSystemProvider = new FSP();\n\n  context.subscriptions.push(\n    vscode.workspace.registerFileSystemProvider(\"mdJSX\", fileSystemProvider, {\n      isCaseSensitive: true,\n    })\n  );\n  context.subscriptions.push(conversionProvider);\n\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"markdown-to-jsx.initialize\", () => {\n      vscode.workspace.updateWorkspaceFolders(0, 0, {\n        uri: vscode.Uri.parse(\"mdJSX:/\"),\n        name: \"MD2JSX\",\n      });\n    })\n  );\n\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"markdown-to-jsx.convertToJSX\", () => {\n      const jsxData = conversionProvider.handleFile(\"jsx\");\n\n      if (jsxData) {\n        fileSystemProvider.writeFile(\n          vscode.Uri.parse(`mdJSX:/output.jsx`),\n          Buffer.from(jsxData),\n          { create: true, overwrite: true }\n        );\n      }\n    })\n  );\n\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"markdown-to-jsx.convertToHtml\", () => {\n      const htmlData = conversionProvider.handleFile(\"html\");\n\n      if (htmlData) {\n        fileSystemProvider.writeFile(\n          vscode.Uri.parse(`mdJSX:/output.html`),\n          Buffer.from(htmlData),\n          { create: true, overwrite: true }\n        );\n      }\n    })\n  );\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","regex","h1","h2","h3","h4","h5","h6","b","i","br","a","bq","img","tagList","toHtml","htmlParser","md","tag","replace","trim","ConversionProvider","handleFile","func","editor","path","doc","document","languageId","this","_convertHtml","_convertJSX","data","getText","err","exportHtml","exportJSX","dispose","File","constructor","name","type","ctime","Date","now","mtime","size","Directory","entries","Map","FSP","root","_emitter","_bufferedEvents","onDidChangeFile","event","stat","uri","_lookup","readDirectory","entry","_lookupAsDirectory","result","child","push","readFile","_lookupAsFile","writeFile","content","options","basename","parent","_lookupParentDirectory","create","overwrite","set","_fireSoon","byteLength","rename","oldUri","newUri","oldParent","newParent","newName","delete","dirname","with","has","createDirectory","silent","parts","split","part","watch","_resource","events","_fireSoonHandle","clearTimeout","setTimeout","fire","length","async","activate","context","console","log","conversionProvider","fileSystemProvider","subscriptions","isCaseSensitive","jsxData","Buffer","from","htmlData","deactivate"],"sourceRoot":""}